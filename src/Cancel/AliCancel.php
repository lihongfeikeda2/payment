<?php
namespace Payment\Cancel;

use Payment\Common\Ali\AliBaseStrategy;
use Payment\Common\Ali\Data\CancelData;
use Payment\Common\PayException;
use Payment\Config;
use Payment\Utils\ArrayUtil;

/**
 * 退款业务
 * Class AliRefund
 * @package Payment\Refund
 */
class AliCancel extends AliBaseStrategy
{
    protected $method = 'alipay.trade.cancel';

    /**
     * 返回退款数据构造类
     * @return string
     */
    public function getBuildDataClass()
    {
        $this->config->method = $this->method;
        return CancelData::class;
    }

    /**
     * 返回数据
     * @param array $data
     * @return array|string
     * @throws PayException
     */
    protected function retData(array $data)
    {
        $data = parent::retData($data); // TODO: Change the autogenerated stub

        try {
            $ret = $this->sendReq($data);
        } catch (PayException $e) {
            throw $e;
        }

        if ($this->config->returnRaw) {
            $ret['channel'] = Config::ALI_CANCEL;
            return $ret;
        }

        return $this->createBackData($ret);
    }

    /**
     * 处理支付宝返回的数据，统一处理后返回
     * @param array $data  支付宝返回的数据
     * @return array
     * @author helei
     */
    protected function createBackData(array $data)
    {
        // 新版本
        if ($data['code'] !== '10000') {
            return [
                'is_success'    => 'F',
                'error' => $data['sub_msg'],
                'channel'   => Config::ALI_CANCEL,
            ];
        }
        return [
            'is_success'    => 'T',
            "data"=>"撤销成功"
        ];
    }
}
